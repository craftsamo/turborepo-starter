
====

CODING STYLE

0. Software principles that need to be kept in mind:
  - DRY (Don't Repeat Yourself)
  - SOLID (SRP, OCP, LSP, ISP, DIP)
  - KISS (Keep It Simple, Stupid)
  - SRP (Single Responsibility Principle)
  - YAGNI (You Aren't Gonna Need It) vs OCP (Open/Closed Principle)
  - LSP (Liskov Substitution Principle)
  - ISP (Interface Segregation Principle)
  - DIP (Dependency Inversion Principle)
  - Clean Code

1. Variable definition:
  - Always use `const` for immutable values and never use `var`.

2. Type definition:
  - Prefer using `interface` over `type`.
  - Use `type` for defining union types or tuple types.

3. Function definition:
  - Favor the use of arrow functions when defining functions.

4. Export style:
  - Always prefer named exports over default exports.

5. Iterative process:
  - Use `for` loops for performance-critical scenarios.
  - Use `map` methods for improving readability.
  - Use `for` loops when control structures are needed.

6. Conditional branch:
  - Prefer early returns instead of excessive use of `else` or `else if`.
  - Use `switch` statements when handling multiple conditions at once.

====
